version: "2.4"

volumes:
  mysqldata_backend: {}
  mongo_backend: {}

services:
  proxy:
    image: traefik:v2.2
    command:
      - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.constraints=Label(`traefik.tags`,`modellab`)"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    ports:
      - 80:80

  app:
    build:
      context: .
      dockerfile: _fixtures/Dockerfile
    image: task
    hostname: task
    working_dir: /app
    depends_on:
      - proxy
      - backend-db
      - rabbitmq
      - mongodb
    group_add:
      - "${DOCKER_GROUP_ID}"
    ports:
      - 8080:8080
      - 8081:8081
      - 8082:8082
      - 8083:8083
      - 3000:3000
    volumes:
      - ./:/app
    labels:
      - "traefik.enable=true"
      - "traefik.tags=modellab"

      # backend
      - "traefik.http.routers.backend.rule=Host(`localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=http"
      - "traefik.http.routers.backend.middlewares=backend-stripprefix"
      - "traefik.http.routers.backend.service=backend"
      - "traefik.http.middlewares.backend-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"

      #websocket
      - "traefik.http.routers.websocket.rule=Host(`localhost`) && PathPrefix(`/websocket`)"
      - "traefik.http.routers.websocket.entrypoints=http"
      - "traefik.http.routers.websocket.middlewares=websocket-stripprefix"
      - "traefik.http.routers.websocket.service=websocket"
      - "traefik.http.middlewares.websocket-stripprefix.stripprefix.prefixes=/websocket"
      - "traefik.http.services.websocket.loadbalancer.server.port=8082"

      # hub_frontend
      - "traefik.http.routers.hub_frontend.rule=Host(`localhost`)"
      - "traefik.http.routers.hub_frontend.entrypoints=http"
      - "traefik.http.routers.hub_frontend.service=hub_frontend"
      - "traefik.http.services.hub_frontend.loadbalancer.server.port=3000"
    environment:
      APP_GATEWAY_GRAPHQL_URL: "http://localhost:8080/graphql"
  backend-db:
    image: mysql:8.0.28-oracle
    hostname: backend-db
    ports:
      - 8306:3306
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-authentication-plugin=mysql_native_password --authentication_policy=mysql_native_password
    environment:
      MYSQL_DATABASE: app
      MYSQL_USER: app
      MYSQL_PASSWORD: app
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - mysqldata_backend:/var/lib/mysql

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: app
      RABBITMQ_DEFAULT_PASS: app

  mongodb:
    image: mongo:7.0
    hostname: mongodb
    restart: always
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: app
      MONGO_INITDB_ROOT_PASSWORD: app      